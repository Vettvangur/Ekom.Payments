# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name: $(majorMinorVersion).$(semanticVersion) # $(rev:r) # NOTE: rev resets when the default retention period expires

trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md
pr: none

pool: HAWKEYE

variables:
  majorMinorVersion: 0.1
  # semanticVersion counter is automatically incremented by one in each execution of pipeline
  # second parameter is seed value to reset to every time the referenced majorMinorVersion is changed
  semanticVersion: $[counter(variables['majorMinorVersion'], 0)]
  solution: '**/Ekom.Payments.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  
steps:
- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '6.x'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- script: |
    echo "##vso[task.setvariable variable=DOTNET_ROOT]$(Agent.ToolsDirectory)/dotnet"
    set PATH=$(Agent.ToolsDirectory)/dotnet;%PATH%
  displayName: 'Set DOTNET_ROOT and Update PATH'
  
- script: dotnet --info
  displayName: 'Show .NET Info'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'



- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    clean: true

- task: MicrosoftSecurityDevOps@1
  displayName: 'Microsoft Security DevOps'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/Ekom.Payments.Core.csproj;**/Ekom.Payments.AspNetCore.csproj;**/Ekom.Payments.U10.csproj;**/Ekom.Payments.Valitor.csproj;**/Ekom.Payments.ValitorPay.csproj'
    includesymbols: true
    versioningScheme: 'byBuildNumber'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;$(Build.ArtifactStagingDirectory)/**/*.snupkg'
#     nuGetFeedType: 'external'
#     publishFeedCredentials: 'VV Public NuGet'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.snupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'VV Public NuGet'

- task: PublishSymbols@2
  inputs:
    SearchPattern: '**/bin/**/*.pdb'
    SymbolServerType: 'TeamServices'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
